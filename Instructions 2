toString is key:
	parse into DatalogProgram
	DP.toString();
		then toString all of the things *in* DP appropriately

recursive descent:

stepping thru vector of tokens (whew):

	parse[thing](){
		match(terminal)
		match(terminal)
		parse[other var]()
			//nest more parses for that translation
	}

obviously this is too much big-O, so make lotsa functions

really what's going on is you're making a recursive structure to call
	match(tokentype) several times in the right sequence


well building the parse engine wasn't too difficult.  just a lot of
repetition.  challenge: making sure I modify the *right* predicate
each time.  

CHECK THE PUNCTUATION IN THE GRAMMAR - I MISSED A COUPLA THINGS
	(this would have been self-evident on the first test tho)


at this point (before any review, really): 
	make a predicate with a vector of params
	make a param with a value and an ID bool
		setName and setValue methods
	make a rule with a head predicate and a vector of tail predicates

	toStrings for each
